Problems:
1) Problems with token: unsure where to save, how to persist, security kinda bad if its saved in db, currently no threading so not possible to save locally
2) Added a function into the constructor of the mtcgApp to remove all tokens inside the db so it can be simulated that users login
3) unsure where to check for admin credentials in user put/get, no such call in .bat
4) unsure about the 409 error for packages where single cards already exist - decided to add all the other cards
5) unsure about necessity of package DB, wouldn't it be sufficient to add to the cards a package id, and if they are sold set it to null?
6) unsure how to return a real optional of Package as a boolean is present and that is always false?
7) deckid in user DB: unsure about value, if I use a bool i have the same problem as with the package that i can't initialize a null object of a card as a bool is always false/true
    - using int is not intuitive for someone reading the DB and needs to be hard coded in the service..
    - still using int for now..
   -> decided to keep int, using it like a bool so if a card is in a deck it's deckid is 1 -> stupid but works atm

x) reusability and centering of some functions.. need to rewrite a lot of code i think (~ 8 days in .. >.>)


added user route: /users implemented, /users/ not yet
added token: added random UUID and boolean to create custom token, created validateToken function, thought about tokenRequest and tokenResponse
adapted httpMapper to take "Authorize:.. "-Header
reworked token to accept the correct input and save it into db - see comments about problem/thoughts; tokenResponse seems not needed, leaving it in atm
reworked User to fit the logic in the service and out of the controller
reworked authentication process in User
reworked .bat file to fit db fields
added Package+ /service /controller /repo, and Card class
reworked package and card repository (split into two)
added package and card save/delete/find in DB, works
added transaction service/controller/database, added user coins
reworked sql statements for dependencies in DB
added possibility to buy package, set it to bought, add to user and remove coins from user
finalised transactions, need testing and comments!!
finished transactions, workaround present, see Problem 6, fully commented and pushed
added cards controller/service, uses UserRepoDB because it's user specific(?!), used ArrayList<Card> instead of Card[]
    - thinking about reworking the other ones as well but maybe in the end
added deck controller/service/repo, added both routes, different representation and all responses except "No Content" as it takes no body
reworked cards service using userRepo to CardsRepo, added functions from UserRepo to CardsRepo
finished deck, commented and pushed
added stats controller/service/repo and entity,
finished stats, commented and pushed; will be reused in scoreboard
added scoreboard controller/service/repo
added user constructor with id/username/elo
finished scoreboard, tested/commented/pushed
added battles controller/service/repo and entity
finished battles route, linking to game logic is missing but already prepared
added trading controller/service/repo, struggled with the correct implementation of the actual trading method
added CardTypeParser to get element and type from card name
finished trading and reworked CardTypeParser, commented + tested
changed todolist into list because the file was corrupt?
reworked responses and added util.ResponseCreator (centralised response creation)
reworked sessions logic and controller/service
